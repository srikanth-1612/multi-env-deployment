name: Add Environment Variables (latest)

on:
  workflow_dispatch:
    inputs:
      actual_env_name:
        description: 'Actual name of the environment in GitHub'
        required: true
        type: string
      var_name:
        description: 'Name of the environment variable'
        required: false
        default: 'DEPLOY_ENV'
        type: string    
      env_name:
        description: 'Name of the environment variable value'
        required: true
        type: string

jobs:
  add-env-vars:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Read Repos from CSV
      id: read-repos
      run: |
        CSV_FILE_PATH="$GITHUB_WORKSPACE/repos.csv"
        if [ -f "$CSV_FILE_PATH" ]; then
         repos=$(awk -F',' 'NR>1 {print $1}' "$CSV_FILE_PATH" | tr '\n' ',')
         repos="${repos%,}"  # Remove trailing comma
         echo "repos=$repos" >> $GITHUB_ENV
        else
         echo "Error: $CSV_FILE_PATH not found."
         exit 1
        fi

    - name: Add Environment Variables to Repositories
      env:
        GITFLOW_GITHUB_TOKEN: ${{ secrets.GITFLOW_GITHUB_TOKEN }}
        REPOS: ${{ env.repos }}
        ENV_NAME: ${{ github.event.inputs.actual_env_name }}
        VAR_NAME: ${{ github.event.inputs.var_name }}
        VAR_VALUE: ${{ github.event.inputs.env_name }}
      run: |
        IFS=','
        for REPO_NAME in $REPOS; do
          echo "Processing repository: $REPO_NAME"
          
          # Fetch existing environments to check if the environment exists
          echo "Fetching environments for repository: $REPO_NAME"
          response=$(curl -H "Authorization: token $GITFLOW_GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository_owner }}/$REPO_NAME/environments)
          
          echo "Response: $response"
          
          if [ $? -ne 0 ]; then
            echo "Failed to fetch environments for $REPO_NAME"
            continue
          fi

          # List environments
          echo "Environments in $REPO_NAME: $(echo $response | jq -r '.environments[].name')"
          
          # Check if environment exists
          env_id=$(echo "$response" | jq -r --arg ENV_NAME "$ENV_NAME" '.environments[]? | select(.name == $ENV_NAME) | .id')
          
          if [ -z "$env_id" ]; then
            echo "Creating environment: $ENV_NAME"
            create_env_response=$(curl -X POST -H "Authorization: token $GITFLOW_GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/${{ github.repository_owner }}/$REPO_NAME/environments -d "{\"name\":\"$ENV_NAME\"}")
            if [ $? -ne 0 ]; then
              echo "Failed to create environment $ENV_NAME for $REPO_NAME"
              echo "Create Environment Response: $create_env_response"
              continue
            fi
            env_id=$(echo "$create_env_response" | jq -r '.id')
          else
            echo "Environment $ENV_NAME already exists"
          fi
          
          # Fetch environment variables
          env_vars_response=$(curl -H "Authorization: token $GITFLOW_GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/${{ github.repository_owner }}/$REPO_NAME/environments/$ENV_NAME/variables)
          
          echo "Environment Variables Response: $env_vars_response"
          
          if [ $? -ne 0 ]; then
            echo "Failed to fetch environment variables for $ENV_NAME in $REPO_NAME"
            continue
          fi

          # Check if environment variable exists
          var_exists=$(echo "$env_vars_response" | jq -r --arg VAR_NAME "$VAR_NAME" --arg VAR_VALUE "$VAR_VALUE" '.variables[]? | select(.name == $VAR_NAME and .value == $VAR_VALUE) | .name')
          
          if [ -n "$var_exists" ]; then
            echo "Environment variable $VAR_NAME with value $VAR_VALUE already exists in $ENV_NAME for $REPO_NAME"
          else
            echo "Adding environment variable: $VAR_NAME with value $VAR_VALUE"
            add_var_response=$(curl -X POST -H "Authorization: token $GITFLOW_GITHUB_TOKEN" -H "Accept: application/vnd.github.v3+json" \
                https://api.github.com/repos/${{ github.repository_owner }}/$REPO_NAME/environments/$ENV_NAME/variables \
                -d "{\"name\":\"$VAR_NAME\", \"value\":\"$VAR_VALUE\"}")
            if [ $? -ne 0 ]; then
              echo "Failed to add environment variable $VAR_NAME for $REPO_NAME"
              echo "Add Variable Response: $add_var_response"
              continue
            fi
          fi
        done
